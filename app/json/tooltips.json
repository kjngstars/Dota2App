{
  "status_0": "Queued: Replay is being processed",
  "status_1": "Unavailable: Replay has expired and no additional data could be obtained",
  "status_2": "Parsed: Replay has been parsed for additional statistics",
  "status_3": "Skipped: Replay was not automatically parsed due to user inactivity",
  "rune_DD": "Double Damage Runes",
  "rune_HST": "Haste Runes",
  "rune_ILL": "Illusion Runes",
  "rune_INV": "Invisibility Runes",
  "rune_REG": "Regeneration Runes",
  "rune_BTY": "Bounty Runes",
  "unparsed_tab": "This data will be available when the replay is parsed.",
  "DOTA_UNIT_ORDER_MOVE_TO_POSITION": "Number of times the player moved to a position",
  "DOTA_UNIT_ORDER_MOVE_TO_TARGET": "Number of times the player moved to a target",
  "DOTA_UNIT_ORDER_ATTACK_MOVE": "Number of times the player attack moved",
  "DOTA_UNIT_ORDER_ATTACK_TARGET": "Number of times the player attacked a target",
  "DOTA_UNIT_ORDER_CAST_POSITION": "Number of times the player cast on a position",
  "DOTA_UNIT_ORDER_CAST_TARGET": "Number of times the player cast on a target",
  "DOTA_UNIT_ORDER_HOLD_POSITION": "Number of times the player held position",
  "DOTA_UNIT_ORDER_DROP_ITEM": "Number of times the player dropped an item",
  "DOTA_UNIT_ORDER_GIVE_ITEM": "Number of times the player gave an item",
  "DOTA_UNIT_ORDER_PICKUP_ITEM": "Number of times the player picked up an item",
  "DOTA_UNIT_ORDER_GLYPH": "Number of times the player used the glyph",
  "DOTA_UNIT_ORDER_RADAR": "Number of times the player used scan",
  "DOTA_UNIT_ORDER_PING_ABILITY": "Number of times the player pinged an ability",
  "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION": "Number of times the player moved in a direction",
  "DOTA_UNIT_ORDER_CAST_NO_TARGET": "Number of times the player cast on no target",
  "DOTA_UNIT_ORDER_MOVE_TO_POSITION_short": "Move (P)",
  "DOTA_UNIT_ORDER_MOVE_TO_TARGET_short": "Move (T)",
  "DOTA_UNIT_ORDER_ATTACK_MOVE_short": "Attack (M)",
  "DOTA_UNIT_ORDER_ATTACK_TARGET_short": "Attack (T)",
  "DOTA_UNIT_ORDER_CAST_POSITION_short": "Cast (P)",
  "DOTA_UNIT_ORDER_CAST_TARGET_short": "Cast (T)",
  "DOTA_UNIT_ORDER_CAST_NO_TARGET_short": "Cast (N)",
  "DOTA_UNIT_ORDER_HOLD_POSITION_short": "Hold",
  "DOTA_UNIT_ORDER_DROP_ITEM_short": "Drop",
  "DOTA_UNIT_ORDER_GIVE_ITEM_short": "Give",
  "DOTA_UNIT_ORDER_PICKUP_ITEM_short": "Pickup",
  "DOTA_UNIT_ORDER_GLYPH_short": "Glyph",
  "DOTA_UNIT_ORDER_RADAR_short": "Scan",
  "DOTA_UNIT_ORDER_PING_ABILITY_short": "Pings (Ability)",
  "positivity": "An estimation of how positive all chat was.",
  "kill_death": "Data recorded from combat log.  Includes Aegis and Reincarnation deaths.",
  "damage_taken": "Data recorded from combat log.  Values may not match those given in the API.",
  "farm_heroes": "Heroes killed",
  "farm_creeps": "Lane creeps killed",
  "farm_neutrals": "Neutral creeps killed (includes Ancients)",
  "farm_ancients": "Ancient creeps killed",
  "farm_towers": "Towers killed",
  "farm_couriers": "Couriers killed",
  "farm_observers": "Observers killed",
  "farm_sentries": "Sentries killed",
  "farm_roshan": "Roshans killed",
  "farm_necronomicon": "Necronomicon units killed",
  "actions_per_min": "Number of actions the player performed per minute",
  "pings": "Number of times the player pinged the map",
  "mmr": "The Solo MMR of the player",
  "level": "Level achieved by hero",
  "kills": "Number of kills by hero",
  "deaths": "Number of deaths of hero",
  "assists": "Number of assists by hero",
  "last_hits": "Number of last hits by hero",
  "denies": "Number of denied creeps",
  "total_gold": "Total gold farmed",
  "gold_per_min": "Gold farmed by hero per minute",
  "xp_per_min": "Experience gained by hero per minute",
  "hero_damage": "Amount of damage dealt to heroes",
  "tower_damage": "Amount of damage dealt to towers",
  "hero_healing": "Amount of health restored to heroes",
  "duration": "The length of the match",
  "first_blood_time": "The time first blood occurred",
  "kda": "(Kills+Assists)/(Deaths+1)",
  "stuns": "Seconds of disable on heroes",
  "time_dead": "Seconds dead",
  "tower_kills": "Number of towers killed",
  "neutral_kills": "Number of neutral creeps killed",
  "courier_kills": "Number of couriers killed",
  "purchase_tpscroll": "Town Portal Scroll purchases",
  "purchase_ward_observer": "Observer Ward purchases",
  "purchase_ward_sentry": "Sentry Ward purchases",
  "purchase_smoke_of_deceit": "Smoke of Deceit purchases",
  "purchase_dust": "Dust of Appearance purchases",
  "purchase_gem": "Gem of True Sight purchases",
  "purchase_rapier": "Divine Rapier purchases",
  "purchase_buyback": "Buyback purchases",
  "used_ward_observer": "Number of Observer Wards placed during the game",
  "used_ward_sentry": "Number of Sentry Wards placed during the game",
  "hero_id": "The hero played by player",
  "result": "Whether the player won or lost",
  "match_id": "The ID of the match",
  "game_mode": "The game mode of the match",
  "skill": "The skill bracket of the match.<br>Approximate MMR cutoffs:<br><3200: Normal<br>3200-3700: High<br>>3700: Very High",
  "ended": "The time the match ended",
  "pick_order": "Order in which the player picked",
  "throw": "Maximum gold advantage in a lost game",
  "comeback": "Maximum gold disadvantage in a won game",
  "stomp": "Maximum gold advantage in a won game",
  "loss": "Maximum gold disadvantage in a lost game",
  "items": "Items built",
  "lane": "Lane based on early game position",
  "lane_efficiency": "Percentage of lane gold (creeps+passive+starting) obtained at 10 minutes",
  "lane_efficiency_pct": "Percentage of lane gold (creeps+passive+starting) obtained at 10 minutes",
  "lhten": "Last hits at 10 minutes",
  "max_hero_hit": "Largest instance of damage on a hero",
  "ability_uses": "Skills used (Number of damage instances on enemy heroes)",
  "item_uses": "Items used",
  "damage_inflictor": "Damage dealt to heroes by items/skills",
  "damage_inflictor_received": "Damage received from heroes by items/skills",
  "teamfight_participation": "Radiant participation/Dire participation",
  "teamfight_score": "Radiant kills/Dire kills",
  "teamfight_radiant_gold_adv": "Net gold advantage for Radiant",
  "teamfight_radiant_xp_adv": "Net XP advantage for Radiant",
  "killstreak_multikill": "This table associates Kill Streaks (one row for each streak) with Multi Kills and the Teamfight analysis seen above (denoted under each kill in the streak).",
  "items_name": "Name of item",
  "items_built": "Number of times this item was built",
  "items_matches": "Number of matches where this item was built",
  "items_uses": "Number of times this item was used",
  "items_uses_per_match": "Mean number of times this item was used in matches where it was built",
  "items_timing": "Mean time this item was built at",
  "items_build_pct": "Percentage of matches this item was built in",
  "items_win_pct": "Percentage of matches won where this item was built",
  "skills_name": "Name of ability",
  "skills_casts": "Number of times ability was cast",
  "skills_hits": "Number of damage instances to heroes caused by skill",
  "skills_hit_pct": "Number of hits divided by number of casts",
  "last_played": "The last time a match was played with this player/hero",
  "played_as": "Number of games played as this hero",
  "played_with": "Number of games with this player/hero on the team",
  "played_against": "Number of games with this player/hero on the opposing team",
  "win_pct_as": "Win percentage as this hero",
  "win_pct_with": "Win percentage with this player/hero",
  "win_pct_against": "Win percentage against this player/hero",
  "subheading_ranking": "Based on wins and average visible MMR in matches played.  Rankings reset quarterly.",
  "buy_cheese": "Buy some cheese. Help pay for servers. Reaching the goal every month keeps us running.",
  "cheese_goal": "Monthly Cheese Goal",
  "cheese_button_text": "Help us out",
  "open_source": "An open source volunteer project",
  "privacy_terms": "Privacy/Terms",
  "follow_on": "Follow on",
  "dota2_api": "Dota 2 API powered by",
  "parsing_by": "Parsing by",
  "cheese_by": "Cheese icon by",
  "app_name": "YASP",
  "error_message": "Whoops! Something went wrong."
}
